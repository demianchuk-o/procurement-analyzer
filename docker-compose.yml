version: '3.9'

x-celery-common: &celery-common
  build: .
  depends_on:
    - redis
    - db
  environment:
    - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    - DATABASE_URL=${DATABASE_URL}

services:
  web:
    build: .
    ports:
      - '5000:5000'
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_HOST_PORT}:${DB_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - '${REDIS_HOST_PORT}:6379'

  celery_default:
    <<: *celery-common
    command: >
      celery -A celery_app worker
        --concurrency=6
        --loglevel=INFO
        --prefetch-multiplier=4
        -Q default

  celery_heavy:
    <<: *celery-common
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: '4G'
    command: >
      celery -A celery_app worker
        --concurrency=2
        --loglevel=INFO
        --prefetch-multiplier=1
        -Q heavy

  celery_beat:
    <<: *celery-common
    command: >
      celery -A celery_app beat
        --loglevel=INFO